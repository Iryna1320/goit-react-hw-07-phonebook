{"version":3,"sources":["redux/contacts/contacts-actions.js","components/Container/Container.js","components/Container/Container.module.css","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","components/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","Container","children","className","styles","module","exports","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","post","response","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","initialUserState","name","email","user","createReducer","_","payload","setError","error","isAuthenticated","combineReducers","getIsAuthenticated","state","getUserName","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","authOperations","defaultAvatar","src","alt","width","Button","type","variant","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","Spinner","animation","role","path","items","filter","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64454b2f.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/chageFilter');\r\n","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n  // <div>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1V1G6\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  getCurrentUser,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Главная\r\n    </NavLink>\r\n\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Контакты\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.ec618d9c.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations, authSelectors } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <Button type=\"button\" variant=\"primary\" onClick={onLogout}>\r\n      Logout\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport Container from './components/Container';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Spinner } from 'react-bootstrap';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsVIew'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n\n        <Suspense\n          fallback={\n            <div className=\"d-flex justify-content-center\">\n              <Spinner animation=\"border\" variant=\"danger\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </div>\n          }\n        >\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              component={RegisterView}\n              redirectTo=\"/contacts\"\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              component={LoginView}\n              redirectTo=\"/contacts\"\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={ContactsView}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}