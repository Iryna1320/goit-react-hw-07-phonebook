{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","views/ContactsVIew.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","name","number","dispatch","contact","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","massage","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","a","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","getFilter","state","contacts","filter","getAllContacts","items","getLoading","loading","getVisibleContactName","createSelector","allContacts","normalizedFilter","console","log","includes","ContactForm","nameInputId","uuidv4","numberInputId","inputChange","evt","currentTarget","value","setState","onAddContact","event","props","preventDefault","find","item","alert","onSubmit","reset","this","className","styles","formContact","htmlFor","formLabel","pattern","title","required","type","placeholder","formInput","onChange","id","button","Component","connect","contactsSelectors","contactsOperations","e","changeFilter","target","filterTitle","filterInput","ContactList","onDeleteContact","map","contactItem","buttonDel","onClick","barStyles","containerBox","width","margin","textAlign","backgroundColor","marginTop","marginBottom","color","ContactsView","fetchContacts","Container","style","isLoadingContacts","module","exports"],"mappings":"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","file":"static/js/4.a643f81a.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.massage));\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.massage)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error.massage)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getVisibleContactName = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    console.log(allContacts);\r\n\r\n    return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getAllContacts,\r\n  getVisibleContactName,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  inputChange = evt => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onAddContact = event => {\r\n    const { items } = this.props;\r\n    const { name, number } = this.state;\r\n\r\n    event.preventDefault();\r\n\r\n    if (items.find(item => item.name.toLowerCase() === name.toLowerCase())) {\r\n      alert('Такой контакт существует!');\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { onAddContact, inputChange, nameInputId, numberInputId } = this;\r\n\r\n    return (\r\n      <form className={styles.formContact} onSubmit={onAddContact}>\r\n        <label htmlFor={nameInputId} className={styles.formLabel}>\r\n          Name\r\n          <input\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"введите имя\"\r\n            name=\"name\"\r\n            value={name}\r\n            className={styles.formInput}\r\n            onChange={inputChange}\r\n            id={nameInputId}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={numberInputId} className={styles.formLabel}>\r\n          Number\r\n          <input\r\n            type=\"telephone\"\r\n            placeholder=\"введите номер\"\r\n            name=\"number\"\r\n            className={styles.formInput}\r\n            value={number}\r\n            onChange={inputChange}\r\n            id={numberInputId}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: contactsSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <lable className={styles.filter}>\r\n      <p className={styles.filterTitle}>Find contacts by name</p>\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </lable>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.contactItem} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            className={styles.buttonDel}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Deleted\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport ContactList from './ContactList';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContactName(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Container from '../components/Container';\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\n\r\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\r\n\r\nconst styles = {\r\n  barStyles: {\r\n    // display: 'flex',\r\n    // alignItems: 'flex-end',\r\n    // justifyContent: 'center',\r\n    // marginBottom: 20,\r\n  },\r\n  containerBox: {\r\n    width: 500,\r\n    margin: 'auto',\r\n    textAlign: 'left',\r\n    backgroundColor: 'inherit',\r\n  },\r\n  title: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div style={styles.containerBox}>\r\n          <h1 style={styles.title}>Phonebook</h1>\r\n          <ContactForm />\r\n\r\n          <h2 style={styles.title}>Contacts</h2>\r\n          {this.props.isLoadingContacts && <h1>Loading...</h1>}\r\n          <Filter />\r\n\r\n          <ContactList />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContact\":\"ContactForm_formContact__2il42\",\"formLabel\":\"ContactForm_formLabel__X2kXj\",\"formInput\":\"ContactForm_formInput__3tnQj\",\"button\":\"ContactForm_button__2bNzU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1AkZ9\",\"filterInput\":\"Filter_filterInput__2VHw5\",\"filterTitle\":\"Filter_filterTitle__3uKM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__1M3yg\",\"buttonDel\":\"ContactList_buttonDel__c_G8M\"};"],"sourceRoot":""}